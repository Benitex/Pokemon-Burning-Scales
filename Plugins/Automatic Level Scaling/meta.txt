Name         = Automatic Level Scaling
Version      = 1.3.2
Website      = https://github.com/Benitex/Automatic-Level-Scaling
Credits      = Benitex, Joltik, Umbreon
#===============================================================================
# Instalation
#===============================================================================
# To install this plugin, extract the zip file into your game project main folder.
# Then, you should check if you're already using variables 99 and 100 in your game. 
# These are the variables that control trainer and wild pokemon difficulty, respectively.
# 
# If you are already using these variables, go to the Settings.rb script and change 
# the value to whichever variable you want to use to change the difficulty.
# 
# In Settings.rb, you can also create other difficulty options and disable automatic 
# evolutions and updated movesets.
# 
#===============================================================================
# How to use
#===============================================================================
# Selecting a difficulty:
# 
# In order to change the difficulty, you should use an event to change the variable
# value according to the pre-defined difficulties. If you want to disable automatic 
# level scaling, just set the variable value to 0. By default, all variable values are 0.
# 
# Creating new difficulties:
# 
# There are three pre-defined difficulties, but you can add your own new ones by using 
# the function "Difficulty.new(id, random_increase, fixed_increase)"
#   "id" is the value stored in TRAINERVARIABLE or WILDVARIABLE
#   "random_increase" is a random value that increases the pokemon level
#   "fixed_increase" is a pre-defined value that increases the pokemon level
# Note that these variables can also store negative values. 
# Setting them to 0 would have the same effect of calling "pbBalancedLevel($Trainer.party)" 
# and removing two from the avarage.
# 
# # Changing settings for a specific battle:
# 
# You can use the following function to change some settings before a specific battle.
# All arguments are optional and can be positioned in any order.
# Don't forget to change them back to the original settings after the battle.
# AutomaticLevelScaling.setSettings(
#   update_moves:,
#   automatic_evolutions:,
#   proportional_scaling:,
#   only_scale_if_higher:,
#   only_scale_if_lower:,
#   first_evolution_level:,
#   second_evolution_level:
# )
#   "update_moves" can be set to false if you don't want moves to be updated after setting the new level and stage
#   "proportional_scaling" can be set to true if you want to scale levels but take original level differences into consideration
#   "only_scale_if_higher" can be set to true if you want to use the original level when a player's pokemon level is lower than the original level
#   "only_scale_if_lower" can be set to true if you want to use the original level when a player's pokemon level is higher than the original level
#   "automatic_evolutions" can be set to false if you don't pokemon to automatically evolve if possible
#   "first_evolution_level" is the level required for pokemon that don't evolve by level to get to the mid form
#   "second_evolution_level" is the level required for pokemon that don't evolve by level to get to the final form
#===============================================================================
# Detailed credits
#===============================================================================
# The one script I was inspired by the most is Joltik's Advanced Pokemon Level Balancing + evolution, 
# but the default Essentials random dungeon script was also important to make this script.
#===============================================================================